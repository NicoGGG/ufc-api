# Generated by Django 4.2.6 on 2023-10-20 10:26

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=100)),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[("UFC", "UFC"), ("Fight Night", "Fight Night")],
                        max_length=20,
                    ),
                ),
                ("link", models.CharField(max_length=500)),
                ("event_id", models.CharField(max_length=64, unique=True)),
                ("upcoming", models.BooleanField(default=False)),
                ("completed", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Fighter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("nickname", models.CharField(blank=True, max_length=50, null=True)),
                ("height", models.CharField(blank=True, max_length=5, null=True)),
                ("weight", models.CharField(blank=True, max_length=20, null=True)),
                ("reach", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "stance",
                    models.CharField(
                        blank=True,
                        choices=[("Orthodox", "Orthodox"), ("Southpaw", "Southpaw")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("belt", models.BooleanField(default=False)),
                ("win", models.IntegerField()),
                ("loss", models.IntegerField()),
                ("draw", models.IntegerField()),
                ("link", models.CharField(max_length=500)),
                ("fighter_id", models.CharField(max_length=64, unique=True)),
                ("photo_url", models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Fight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fight_id", models.CharField(max_length=64, unique=True)),
                ("link", models.CharField(max_length=500)),
                (
                    "wl_fighter_one",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("W", "Win"),
                            ("L", "Loss"),
                            ("NC", "No Contest"),
                            ("DRAW", "Draw"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "wl_fighter_two",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("W", "Win"),
                            ("L", "Loss"),
                            ("NC", "No Contest"),
                            ("DRAW", "Draw"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "weight_class",
                    models.CharField(
                        choices=[
                            ("Heavyweight", "Heavyweight"),
                            ("Light Heavyweight", "Light Heavyweight"),
                            ("Middleweight", "Middleweight"),
                            ("Welterweight", "Welterweight"),
                            ("Lightweight", "Lightweight"),
                            ("Featherweight", "Featherweight"),
                            ("Bantamweight", "Bantamweight"),
                            ("Flyweight", "Flyweight"),
                            ("Women's Featherweight", "Women's Featherweight"),
                            ("Women's Bantamweight", "Women's Bantamweight"),
                            ("Women's Flyweight", "Women's Flyweight"),
                            ("Women's Strawweight", "Women's Strawweight"),
                        ],
                        max_length=50,
                    ),
                ),
                ("belt", models.BooleanField(default=False)),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("U-DEC", "Unanimous Decision"),
                            ("S-DEC", "Split Decision"),
                            ("M-DEC", "Majority Decision"),
                            ("KO/TKO", "Knockout/Technical Knockout"),
                            ("CNC", "Could Not Continue"),
                            ("SUB", "Submission"),
                            ("Overturned", "Overturned"),
                            ("DQ", "Disqualification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("round", models.IntegerField()),
                ("time", models.CharField(max_length=5)),
                (
                    "bonus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Fight", "Fight of the Night"),
                            ("Perf", "Performance of the Night"),
                            ("Sub", "Submission of the Night"),
                            ("KO", "Knockout of the Night"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ufcscraper.event",
                    ),
                ),
                (
                    "fighter_one",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fighter1",
                        to="ufcscraper.fighter",
                    ),
                ),
                (
                    "fighter_two",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fighter2",
                        to="ufcscraper.fighter",
                    ),
                ),
            ],
        ),
    ]
